{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/shared/services/character.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/character-details\", a1];\n};\nfunction CharacterListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 1);\n    i0.ɵɵelement(2, \"img\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const character_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, character_r1.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", character_r1.image, i0.ɵɵsanitizeUrl)(\"alt\", character_r1.name);\n  }\n}\nexport class CharacterListComponent {\n  constructor(characterSvc) {\n    this.characterSvc = characterSvc;\n    this.characters = [];\n    this.pageNum = 1;\n    this.hideScrollHeight = 200;\n    this.showScrollHeight = 500;\n  }\n  getDataFromService() {\n    this.characterSvc.searchCharacters(this.query, this.pageNum).pipe(take(1)).subscribe(res => {\n      this.characters = [...this.characters];\n    });\n  }\n}\nCharacterListComponent.ɵfac = function CharacterListComponent_Factory(t) {\n  return new (t || CharacterListComponent)(i0.ɵɵdirectiveInject(i1.CharacterService));\n};\nCharacterListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CharacterListComponent,\n  selectors: [[\"app-character-list\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [3, \"src\", \"alt\"]],\n  template: function CharacterListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CharacterListComponent_div_0_Template, 3, 5, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.characters);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAAAA,2BAA0C;IAElCA,yBAAoD;IACxDA,iBAAI;;;;IAFDA,eAAmD;IAAnDA,wEAAmD;IAC7CA,eAAuB;IAAvBA,0DAAuB;;;ACOpC,OAAM,MAAOC,sBAAsB;EAQjCC,YAAoBC,YAA8B;IAA9B,iBAAY,GAAZA,YAAY;IAPhC,eAAU,GAAgB,EAAE;IAEpB,YAAO,GAAG,CAAC;IAEX,qBAAgB,GAAG,GAAG;IACtB,qBAAgB,GAAG,GAAG;EAEuB;EAE7CC,kBAAkB;IACxB,IAAI,CAACD,YAAY,CAACE,gBAAgB,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,OAAO,CAAC,CACzDC,IAAI,CACHC,IAAI,CAAC,CAAC,CAAC,CACR,CAACC,SAAS,CAAGC,GAAO,IAAI;MACvB,IAAI,CAACC,UAAU,GAAG,CAAC,GAAG,IAAI,CAACA,UAAU,CAAC;IACxC,CAAC,CAAE;EACP;;AAjBWX,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTnCjB,uEAIM;;;MAJqBA,wCAAa","names":["i0","CharacterListComponent","constructor","characterSvc","getDataFromService","searchCharacters","query","pageNum","pipe","take","subscribe","res","characters","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp\\src\\app\\components\\pages\\characters\\character-list\\character-list.component.html","C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp\\src\\app\\components\\pages\\characters\\character-list\\character-list.component.ts"],"sourcesContent":["<div *ngFor=\"let character of characters\">\n    <a [routerLink]=\"['/character-details', character.id]\">\n        <img [src]=\"character.image\" [alt]=\"character.name\">\n    </a>\n</div>","import { Component } from '@angular/core';\nimport { Character } from '@app/shared/interfaces/character.interface';\nimport { CharacterService } from '@app/shared/services/character.service';\n\n@Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.css']\n})\nexport class CharacterListComponent {\n  characters: Character[] = []\n\n  private pageNum = 1\n  private query?:string\n  private hideScrollHeight = 200\n  private showScrollHeight = 500\n\n  constructor(private characterSvc: CharacterService) {}\n\n  private getDataFromService ():void{\n    this.characterSvc.searchCharacters(this.query, this.pageNum)\n      .pipe(\n        take(1),\n      ).subscribe( (res:any) => {\n        this.characters = [...this.characters]\n      } )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}