{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, HostListener, Inject } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\nimport { filter, take } from 'rxjs/operators';\nlet CharacterListComponent = class CharacterListComponent {\n  constructor(document, characterSvc, route, router) {\n    this.document = document;\n    this.characterSvc = characterSvc;\n    this.route = route;\n    this.router = router;\n    this.characters = [];\n    this.info = {\n      next: ''\n    };\n    this.showGoUpButton = false;\n    this.pageNum = 1;\n    this.hideScrollHeight = 200;\n    this.showScrollHeight = 500;\n    this.onUrlChange();\n  }\n  ngOnInit() {\n    this.getCharactersByQuery();\n  }\n  onWindowScroll() {\n    const yOffSet = window.pageYOffset;\n    if ((yOffSet || this.document.documentElement.scrollTop || this.document.body.scrollTop) > this.showScrollHeight) {\n      this.showGoUpButton = true;\n    } else if (this.showGoUpButton && (yOffSet || this.document.documentElement.scrollTop || this.document.body.scrollTop) > this.showScrollHeight) {\n      this.showGoUpButton = false;\n    }\n  }\n  onScrollDown() {\n    if (this.info.next) {\n      this.pageNum++;\n      this.getDataFromService();\n    }\n  }\n  onScrollTop() {\n    this.document.body.scrollTop = 0;\n    this.document.documentElement.scrollTop = 0;\n  }\n  onUrlChange() {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      this.characters = [];\n      this.pageNum = 1;\n      this.getCharactersByQuery();\n    });\n  }\n  getCharactersByQuery() {\n    this.route.queryParams.pipe(take(1)).subscribe(params => {\n      this.query = params['q'];\n      this.getDataFromService();\n    });\n  }\n  getDataFromService() {\n    this.characterSvc.searchCharacters(this.query, this.pageNum).pipe(take(1)).subscribe(res => {\n      if (res?.results?.length) {\n        const {\n          info,\n          results\n        } = res;\n        this.characters = [...this.characters, ...results];\n        this.info = info;\n      } else {\n        this.characters = [];\n      }\n    });\n  }\n};\n__decorate([HostListener('window:scroll', [])], CharacterListComponent.prototype, \"onWindowScroll\", null);\nCharacterListComponent = __decorate([Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.css']\n}), __param(0, Inject)], CharacterListComponent);\nexport { CharacterListComponent };","map":{"version":3,"mappings":"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","names":["Component","HostListener","Inject","NavigationEnd","filter","take","CharacterListComponent","constructor","document","characterSvc","route","router","next","onUrlChange","ngOnInit","getCharactersByQuery","onWindowScroll","yOffSet","window","pageYOffset","documentElement","scrollTop","body","showScrollHeight","showGoUpButton","onScrollDown","info","pageNum","getDataFromService","onScrollTop","events","pipe","event","subscribe","characters","queryParams","params","query","searchCharacters","res","results","length","__decorate","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp\\src\\app\\components\\pages\\characters\\character-list\\character-list.component.ts"],"sourcesContent":["import { Component, HostListener, Inject, Injectable, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, ParamMap, Router } from '@angular/router';\nimport { Character } from '@app/shared/interfaces/character.interface';\nimport { CharacterService } from '@app/shared/services/character.service';\nimport { filter, take } from 'rxjs/operators'\nimport { DOCUMENT } from '@angular/common';\nimport { inject } from '@angular/core/testing';\n\ntype RequestInfo = {\n  next: string\n}\n\n@Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.css']\n})\nexport class CharacterListComponent implements OnInit{\n  characters: Character[] = []\n\n  info:RequestInfo = {\n    next: '',\n  }\n\n  showGoUpButton = false\n  private pageNum = 1\n  private query?:string\n  private hideScrollHeight = 200\n  private showScrollHeight = 500\n\n\n\n  constructor(\n    @Inject private document: Document,\n    private characterSvc: CharacterService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.onUrlChange()\n  }\n\n  ngOnInit():void {\n    this.getCharactersByQuery()\n  }\n\n  @HostListener('window:scroll', [])\n\n  onWindowScroll(): void{\n    const yOffSet = window.pageYOffset\n\n    if((yOffSet || this.document.documentElement.scrollTop || this.document.body.scrollTop) > this.showScrollHeight){\n      this.showGoUpButton = true\n    } else if(this.showGoUpButton && (yOffSet || this.document.documentElement.scrollTop || this.document.body.scrollTop) > this.showScrollHeight){\n      this.showGoUpButton = false\n    }\n  }\n\n  onScrollDown(): void{\n    if(this.info.next){\n      this.pageNum++\n      this.getDataFromService()\n    }\n  }\n\n  onScrollTop(): void{\n    this.document.body.scrollTop = 0\n    this.document.documentElement.scrollTop = 0\n  }\n\n  private onUrlChange(): void {\n    this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd)).subscribe(\n        () => {\n          this.characters = []\n          this.pageNum = 1\n          this.getCharactersByQuery()\n        }\n      )\n  }\n\n  private getCharactersByQuery(): void{\n    this.route.queryParams.pipe(take(1)).subscribe((params: any) => {\n      this.query = params['q']\n      \n      this.getDataFromService()\n    })\n  }\n\n  private getDataFromService ():void{\n    this.characterSvc.searchCharacters(this.query, this.pageNum)\n      .pipe(\n        take(1),\n      ).subscribe( (res:any) => {\n\n        if(res?.results?.length){\n          const {info, results} = res\n          this.characters = [...this.characters, ...results]\n          this.info = info\n        } else {\n          this.characters = []\n        }\n\n      } )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}