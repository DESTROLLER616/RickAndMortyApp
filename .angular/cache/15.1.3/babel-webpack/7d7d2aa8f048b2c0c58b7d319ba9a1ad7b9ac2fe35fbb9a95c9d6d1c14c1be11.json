{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CharacterService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrlAPI = 'https://rickandmortyapi.com/api/character';\n  }\n  searchCharacters(query = '', page = 1) {\n    const filter = `${this.baseUrlAPI}/?name=${query}&page=${page}`;\n    return this.http.get(filter);\n  }\n  getDetails(id) {\n    return this.http.get(`${this.baseUrlAPI}/${id}`);\n  }\n}\nCharacterService.ɵfac = function CharacterService_Factory(t) {\n  return new (t || CharacterService)(i0.ɵɵinject(i1.HttpClient));\n};\nCharacterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CharacterService,\n  factory: CharacterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,eAAU,GAAG,2CAA2C;EAEhB;EAExCC,gBAAgB,CAACC,KAAK,GAAG,EAAE,EAAEC,IAAI,GAAG,CAAC;IACnC,MAAMC,MAAM,GAAG,GAAG,IAAI,CAACC,UAAU,UAAUH,KAAK,SAASC,IAAI,EAAE;IAE/D,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAcF,MAAM,CAAC;EAC3C;EAEAG,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAY,GAAG,IAAI,CAACD,UAAU,IAAIG,EAAE,EAAE,CAAC;EAC7D;;AAdWV,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAW,SAAhBX,gBAAgB;EAAAY,YAFf;AAAM","names":["CharacterService","constructor","http","searchCharacters","query","page","filter","baseUrlAPI","get","getDetails","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp-1\\src\\app\\shared\\services\\character.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Character } from '../interfaces/character.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharacterService {\r\n\r\n  baseUrlAPI = 'https://rickandmortyapi.com/api/character'\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  searchCharacters(query = '', page = 1) {\r\n    const filter = `${this.baseUrlAPI}/?name=${query}&page=${page}`\r\n\r\n    return this.http.get<Character[]>(filter)\r\n  }\r\n\r\n  getDetails(id: number) {\r\n    return this.http.get<Character>(`${this.baseUrlAPI}/${id}`)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}