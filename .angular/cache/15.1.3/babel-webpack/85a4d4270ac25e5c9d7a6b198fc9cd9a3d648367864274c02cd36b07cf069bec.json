{"ast":null,"code":"var _class;\nimport { __decorate, __param } from \"tslib\";\nimport { NavigationEnd } from '@angular/router';\nimport { filter, take } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { inject } from '@angular/core/testing';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/shared/services/character.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-infinite-scroll\";\nimport * as i5 from \"../character.component\";\nfunction CharacterListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-character\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const character_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"character\", character_r2);\n  }\n}\nfunction CharacterListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"No results...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nlet CharacterListComponent = (_class = class CharacterListComponent {\n  constructor(document, characterSvc, route, router) {\n    this.document = document;\n    this.characterSvc = characterSvc;\n    this.route = route;\n    this.router = router;\n    this.characters = [];\n    this.info = {\n      next: ''\n    };\n    this.pageNum = 1;\n    this.hideScrollHeight = 200;\n    this.showScrollHeight = 500;\n    this.onUrlChange();\n  }\n  ngOnInit() {\n    this.getCharactersByQuery();\n  }\n  onScrollDown() {}\n  onScrollTop() {}\n  onUrlChange() {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      this.characters = [];\n      this.pageNum = 1;\n      this.getCharactersByQuery();\n    });\n  }\n  getCharactersByQuery() {\n    this.route.queryParams.pipe(take(1)).subscribe(params => {\n      this.query = params['q'];\n      this.getDataFromService();\n    });\n  }\n  getDataFromService() {\n    this.characterSvc.searchCharacters(this.query, this.pageNum).pipe(take(1)).subscribe(res => {\n      if (res?.results?.length) {\n        const {\n          info,\n          results\n        } = res;\n        this.characters = [...this.characters, ...results];\n        this.info = info;\n      } else {\n        this.characters = [];\n      }\n    });\n  }\n}, _class.ɵfac = function CharacterListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(Document), i0.ɵɵdirectiveInject(i1.CharacterService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n}, _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-character-list\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[\"infinite-scroll\", \"\", 3, \"scrolled\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"character\"]],\n  template: function CharacterListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"scrolled\", function CharacterListComponent_Template_div_scrolled_0_listener() {\n        return ctx.onScrollDown();\n      });\n      i0.ɵɵtemplate(1, CharacterListComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, CharacterListComponent_div_2_Template, 3, 0, \"div\", 2);\n      i0.ɵɵelementStart(3, \"button\");\n      i0.ɵɵtext(4, \"Go up\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.characters);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.characters.length <= 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.InfiniteScrollDirective, i5.characterComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n}), _class);\nCharacterListComponent = __decorate([__param(0, inject(DOCUMENT))], CharacterListComponent);\nexport { CharacterListComponent };","map":{"version":3,"mappings":";;AACA,SAAyBA,aAAa,QAA0B,iBAAiB;AAGjF,SAASC,MAAM,EAAEC,IAAI,QAAQ,gBAAgB;AAC7C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,MAAM,QAAQ,uBAAuB;;;;;;;;;ICL1CC,2BAA0C;IACtCA,mCAAuD;IAC3DA,iBAAM;;;;IADaA,eAAuB;IAAvBA,wCAAuB;;;;;IAI9CA,2BAAoC;IAAGA,6BAAa;IAAAA,iBAAI;;;ADWjD,IAAMC,sBAAsB,aAA5B,MAAMA,sBAAsB;EAYjCC,YAAsCC,QAAkB,EAAUC,YAA8B,EAAUC,KAAqB,EAAUC,MAAc;IAAjH,aAAQ,GAARH,QAAQ;IAAoB,iBAAY,GAAZC,YAAY;IAA4B,UAAK,GAALC,KAAK;IAA0B,WAAM,GAANC,MAAM;IAX/I,eAAU,GAAgB,EAAE;IAE5B,SAAI,GAAe;MACjBC,IAAI,EAAE;KACP;IAEO,YAAO,GAAG,CAAC;IAEX,qBAAgB,GAAG,GAAG;IACtB,qBAAgB,GAAG,GAAG;IAG5B,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,QAAQ;IACN,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAC,YAAY,IAEZ;EAEAC,WAAW,IAEX;EAEQJ,WAAW;IACjB,IAAI,CAACF,MAAM,CAACO,MAAM,CAACC,IAAI,CACrBlB,MAAM,CAAEmB,KAAK,IAAKA,KAAK,YAAYpB,aAAa,CAAC,CAAC,CAACqB,SAAS,CAC1D,MAAK;MACH,IAAI,CAACC,UAAU,GAAG,EAAE;MACpB,IAAI,CAACC,OAAO,GAAG,CAAC;MAChB,IAAI,CAACR,oBAAoB,EAAE;IAC7B,CAAC,CACF;EACL;EAEQA,oBAAoB;IAC1B,IAAI,CAACL,KAAK,CAACc,WAAW,CAACL,IAAI,CAACjB,IAAI,CAAC,CAAC,CAAC,CAAC,CAACmB,SAAS,CAAEI,MAAW,IAAI;MAC7D,IAAI,CAACC,KAAK,GAAGD,MAAM,CAAC,GAAG,CAAC;MAExB,IAAI,CAACE,kBAAkB,EAAE;IAC3B,CAAC,CAAC;EACJ;EAEQA,kBAAkB;IACxB,IAAI,CAAClB,YAAY,CAACmB,gBAAgB,CAAC,IAAI,CAACF,KAAK,EAAE,IAAI,CAACH,OAAO,CAAC,CACzDJ,IAAI,CACHjB,IAAI,CAAC,CAAC,CAAC,CACR,CAACmB,SAAS,CAAGQ,GAAO,IAAI;MAEvB,IAAGA,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAC;QACtB,MAAM;UAACC,IAAI;UAAEF;QAAO,CAAC,GAAGD,GAAG;QAC3B,IAAI,CAACP,UAAU,GAAG,CAAC,GAAG,IAAI,CAACA,UAAU,EAAE,GAAGQ,OAAO,CAAC;QAClD,IAAI,CAACE,IAAI,GAAGA,IAAI;OACjB,MAAM;QACL,IAAI,CAACV,UAAU,GAAG,EAAE;;IAGxB,CAAC,CAAE;EACP;;mBA9DWhB,MAAsB;AAAA;QAAtBA,MAAsB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjBnChC,8BAAiD;MAA5BA;QAAA,OAAYiC,kBAAc;MAAA,EAAC;MAC5CjC,uEAEM;MACVA,iBAAM;MAENA,uEAA8D;MAE9DA,8BAAQ;MAAAA,qBAAK;MAAAA,iBAAS;;;MAPSA,eAAa;MAAbA,wCAAa;MAKtCA,eAA4B;MAA5BA,iDAA4B;;;;;;ADWrBC,sBAAsB,eAYpBiC,iBAAM,CAACpC,QAAQ,CAAC,IAZlBG,sBAAsB,CA+DlC;SA/DYA,sBAAsB","names":["NavigationEnd","filter","take","DOCUMENT","inject","i0","CharacterListComponent","constructor","document","characterSvc","route","router","next","onUrlChange","ngOnInit","getCharactersByQuery","onScrollDown","onScrollTop","events","pipe","event","subscribe","characters","pageNum","queryParams","params","query","getDataFromService","searchCharacters","res","results","length","info","selectors","decls","vars","consts","template","ctx","__param"],"sourceRoot":"","sources":["C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp\\src\\app\\components\\pages\\characters\\character-list\\character-list.component.ts","C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp\\src\\app\\components\\pages\\characters\\character-list\\character-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, ParamMap, Router } from '@angular/router';\nimport { Character } from '@app/shared/interfaces/character.interface';\nimport { CharacterService } from '@app/shared/services/character.service';\nimport { filter, take } from 'rxjs/operators'\nimport { DOCUMENT } from '@angular/common';\nimport { inject } from '@angular/core/testing';\n\ntype RequestInfo = {\n  next: string\n}\n\n@Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.css']\n})\nexport class CharacterListComponent implements OnInit{\n  characters: Character[] = []\n\n  info:RequestInfo = {\n    next: '',\n  }\n\n  private pageNum = 1\n  private query?:string\n  private hideScrollHeight = 200\n  private showScrollHeight = 500\n\n  constructor(@inject(DOCUMENT) private document: Document, private characterSvc: CharacterService, private route: ActivatedRoute, private router: Router) {\n    this.onUrlChange()\n  }\n\n  ngOnInit():void {\n    this.getCharactersByQuery()\n  }\n\n  onScrollDown(){\n\n  }\n\n  onScrollTop(){\n\n  }\n\n  private onUrlChange(): void {\n    this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd)).subscribe(\n        () => {\n          this.characters = []\n          this.pageNum = 1\n          this.getCharactersByQuery()\n        }\n      )\n  }\n\n  private getCharactersByQuery(): void{\n    this.route.queryParams.pipe(take(1)).subscribe((params: any) => {\n      this.query = params['q']\n      \n      this.getDataFromService()\n    })\n  }\n\n  private getDataFromService ():void{\n    this.characterSvc.searchCharacters(this.query, this.pageNum)\n      .pipe(\n        take(1),\n      ).subscribe( (res:any) => {\n\n        if(res?.results?.length){\n          const {info, results} = res\n          this.characters = [...this.characters, ...results]\n          this.info = info\n        } else {\n          this.characters = []\n        }\n\n      } )\n  }\n}\n","<div infinite-scroll (scrolled)=\"onScrollDown()\">\n    <div *ngFor=\"let character of characters\">\n        <app-character [character]=\"character\"></app-character>\n    </div>\n</div>\n\n<div *ngIf=\"characters.length <= 0\"><p>No results...</p></div>\n\n<button>Go up</button>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}