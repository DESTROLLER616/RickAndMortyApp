{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter, take } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/shared/services/character.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-infinite-scroll\";\nimport * as i5 from \"../character.component\";\nfunction CharacterListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-character\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const character_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"character\", character_r3);\n  }\n}\nfunction CharacterListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"No results...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CharacterListComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CharacterListComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onScrollTop());\n    });\n    i0.ɵɵtext(1, \"Go up\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"ngClass\", \"no-hidden\");\n  }\n}\nexport class CharacterListComponent {\n  constructor(document, characterSvc, route, router) {\n    this.document = document;\n    this.characterSvc = characterSvc;\n    this.route = route;\n    this.router = router;\n    this.characters = [];\n    this.info = {\n      next: ''\n    };\n    this.showGoUpButton = false;\n    this.pageNum = 1;\n    this.hideScrollHeight = 200;\n    this.showScrollHeight = 500;\n    this.onUrlChange();\n  }\n  ngOnInit() {\n    this.getDataFromService();\n  }\n  onWindowScroll() {\n    const yOffSet = window.pageYOffset;\n    if ((yOffSet || this.document.documentElement.scrollTop || this.document.body.scrollTop) > this.showScrollHeight) {\n      this.showGoUpButton = true;\n    } else if (this.showGoUpButton && (yOffSet || this.document.documentElement.scrollTop || this.document.body.scrollTop) > this.showScrollHeight) {\n      this.showGoUpButton = false;\n    }\n  }\n  onScrollDown() {\n    if (this.info.next) {\n      this.pageNum++;\n      this.getDataFromService();\n    }\n  }\n  onScrollTop() {\n    this.document.body.scrollTop = 0;\n    this.document.documentElement.scrollTop = 0;\n  }\n  onUrlChange() {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      this.getCharactersByQuery();\n      this.pageNum = 1;\n      this.characters = [];\n    });\n  }\n  getCharactersByQuery() {\n    this.route.queryParams.pipe(take(1)).subscribe(params => {\n      this.query = params['q'];\n      this.getDataFromService();\n      this.characters = [];\n    });\n  }\n  getDataFromService() {\n    this.characterSvc.searchCharacters(this.query, this.pageNum).pipe(take(1)).subscribe(res => {\n      if (res?.results?.length) {\n        const {\n          info,\n          results\n        } = res;\n        this.characters = [...this.characters, ...results];\n        this.info = info;\n      } else {\n        this.characters = [];\n      }\n    });\n  }\n}\nCharacterListComponent.ɵfac = function CharacterListComponent_Factory(t) {\n  return new (t || CharacterListComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.CharacterService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nCharacterListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CharacterListComponent,\n  selectors: [[\"app-character-list\"]],\n  hostBindings: function CharacterListComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function CharacterListComponent_scroll_HostBindingHandler() {\n        return ctx.onWindowScroll();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[\"infinite-scroll\", \"\", 1, \"flex-column\", 3, \"scrolled\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"btn btn-outline-primary\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"character\"], [1, \"btn\", \"btn-outline-primary\", 3, \"ngClass\", \"click\"]],\n  template: function CharacterListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"scrolled\", function CharacterListComponent_Template_div_scrolled_0_listener() {\n        return ctx.onScrollDown();\n      });\n      i0.ɵɵtemplate(1, CharacterListComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, CharacterListComponent_div_2_Template, 3, 0, \"div\", 2);\n      i0.ɵɵtemplate(3, CharacterListComponent_button_3_Template, 2, 1, \"button\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.characters);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.characters.length <= 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showGoUpButton);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.InfiniteScrollDirective, i5.characterComponent],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    height: 60px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wYWdlcy9jaGFyYWN0ZXJzL2NoYXJhY3Rlci1saXN0L2NoYXJhY3Rlci1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["NavigationEnd","filter","take","DOCUMENT","i0","CharacterListComponent","constructor","document","characterSvc","route","router","next","onUrlChange","ngOnInit","getDataFromService","onWindowScroll","yOffSet","window","pageYOffset","documentElement","scrollTop","body","showScrollHeight","showGoUpButton","onScrollDown","info","pageNum","onScrollTop","events","pipe","event","subscribe","getCharactersByQuery","characters","queryParams","params","query","searchCharacters","res","results","length","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp\\src\\app\\components\\pages\\characters\\character-list\\character-list.component.ts","C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp\\src\\app\\components\\pages\\characters\\character-list\\character-list.component.html"],"sourcesContent":["import { Component, HostListener, Inject, Injectable, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, ParamMap, Router } from '@angular/router';\nimport { Character } from '@app/shared/interfaces/character.interface';\nimport { CharacterService } from '@app/shared/services/character.service';\nimport { filter, take } from 'rxjs/operators'\nimport { DOCUMENT } from '@angular/common';\nimport { inject } from '@angular/core/testing';\n\ntype RequestInfo = {\n  next: string\n}\n\n@Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.css']\n})\nexport class CharacterListComponent implements OnInit{\n  characters: Character[] = []\n\n  info:RequestInfo = {\n    next: '',\n  }\n\n  showGoUpButton = false\n  private pageNum = 1\n  private query?:string\n  private hideScrollHeight = 200\n  private showScrollHeight = 500\n\n\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private characterSvc: CharacterService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.onUrlChange()\n  }\n\n  ngOnInit():void {\n    this.getDataFromService()\n  }\n\n  @HostListener('window:scroll', [])\n\n  onWindowScroll(): void{\n    const yOffSet = window.pageYOffset\n\n    if((yOffSet || this.document.documentElement.scrollTop || this.document.body.scrollTop) > this.showScrollHeight){\n      this.showGoUpButton = true\n    } else if(this.showGoUpButton && (yOffSet || this.document.documentElement.scrollTop || this.document.body.scrollTop) > this.showScrollHeight){\n      this.showGoUpButton = false\n    }\n  }\n\n  onScrollDown(): void{\n    if(this.info.next){\n      this.pageNum++\n      this.getDataFromService()\n    }\n  }\n\n  onScrollTop(): void{\n    this.document.body.scrollTop = 0\n    this.document.documentElement.scrollTop = 0\n  }\n\n  private onUrlChange(): void {\n    this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd)).subscribe(\n        () => {\n          this.getCharactersByQuery()\n          this.pageNum = 1\n          this.characters = []\n        }\n      )\n  }\n\n  private getCharactersByQuery(): void{\n    this.route.queryParams.pipe(take(1)).subscribe((params: any) => {\n      this.query = params['q']\n      \n      this.getDataFromService()\n      this.characters = []\n    })\n  }\n\n  private getDataFromService ():void{\n\n    this.characterSvc.searchCharacters(this.query, this.pageNum)\n      .pipe(\n        take(1),\n      ).subscribe( (res:any) => {\n        if(res?.results?.length){\n          const {info, results} = res\n          this.characters = [...this.characters, ...results]\n          this.info = info\n        } else {\n          this.characters = []\n        }\n\n      } )\n  }\n}\n","<div infinite-scroll (scrolled)=\"onScrollDown()\" class=\"flex-column\">\n    <div *ngFor=\"let character of characters\">\n        <app-character [character]=\"character\"></app-character>\n    </div>\n</div>\n\n\n<div *ngIf=\"characters.length <= 0\"><p>No results...</p></div>\n\n<button [ngClass]=\"'no-hidden'\" *ngIf=\"showGoUpButton\" (click)=\"onScrollTop()\" class=\"btn btn-outline-primary\">Go up</button>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}