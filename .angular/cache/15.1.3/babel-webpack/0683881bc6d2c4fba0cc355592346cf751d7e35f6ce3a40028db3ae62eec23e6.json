{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/shared/services/character.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/character-details\", a1];\n};\nfunction CharacterListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 2)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵelement(5, \"img\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const character_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c0, character_r2.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(character_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", character_r2.image, i0.ɵɵsanitizeUrl)(\"alt\", character_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(character_r2.species);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(character_r2.gender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(character_r2.status);\n  }\n}\nfunction CharacterListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"No results...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class CharacterListComponent {\n  constructor(characterSvc, route, router) {\n    this.characterSvc = characterSvc;\n    this.route = route;\n    this.router = router;\n    this.characters = [];\n    this.info = {\n      next: ''\n    };\n    this.pageNum = 1;\n    this.hideScrollHeight = 200;\n    this.showScrollHeight = 500;\n  }\n  ngOnInit() {\n    this.getCharactersByQuery();\n  }\n  onUrlChange() {\n    this.route.events.pipe(filter(events => event instanceof NavigationEnd)).subscribe(() => {});\n  }\n  getCharactersByQuery() {\n    this.route.queryParams.pipe(take(1)).subscribe(params => {\n      this.query = params['q'];\n      console.log('params --> ', params);\n      this.getDataFromService();\n    });\n  }\n  getDataFromService() {\n    this.characterSvc.searchCharacters(this.query, this.pageNum).pipe(take(1)).subscribe(res => {\n      if (res?.results?.length) {\n        const {\n          info,\n          results\n        } = res;\n        this.characters = [...this.characters, ...results];\n        this.info = info;\n      } else {\n        this.characters = [];\n      }\n    });\n  }\n}\nCharacterListComponent.ɵfac = function CharacterListComponent_Factory(t) {\n  return new (t || CharacterListComponent)(i0.ɵɵdirectiveInject(i1.CharacterService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nCharacterListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CharacterListComponent,\n  selectors: [[\"app-character-list\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"routerLink\"], [3, \"src\", \"alt\"]],\n  template: function CharacterListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CharacterListComponent_div_0_Template, 13, 9, \"div\", 0);\n      i0.ɵɵtemplate(1, CharacterListComponent_div_1_Template, 3, 0, \"div\", 1);\n      i0.ɵɵelementStart(2, \"button\");\n      i0.ɵɵtext(3, \"Go up\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.characters);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.characters.length <= 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAyBA,aAAa,QAA0B,iBAAiB;AAGjF,SAASC,IAAI,QAAQ,gBAAgB;;;;;;;;;;ICJrCC,2BAA0C;IAE5BA,YAAoB;IAAAA,iBAAO;IACjCA,2BAAK;IAAAA,yBAAoD;IAAAA,iBAAM;IAC/DA,2BAAK;IAAAA,YAAuB;IAAAA,iBAAM;IAClCA,2BAAK;IAAAA,YAAsB;IAAAA,iBAAM;IACjCA,4BAAK;IAAAA,aAAsB;IAAAA,iBAAM;IACjCA,sBAAI;IACRA,iBAAI;;;;IAPDA,eAAmD;IAAnDA,wEAAmD;IAC5CA,eAAoB;IAApBA,uCAAoB;IAChBA,eAAuB;IAAvBA,0DAAuB;IAC5BA,eAAuB;IAAvBA,0CAAuB;IACvBA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAAsB;IAAtBA,yCAAsB;;;;;IAKnCA,2BAAoC;IAAGA,6BAAa;IAAAA,iBAAI;;;ADIxD,OAAM,MAAOC,sBAAsB;EAYjCC,YAAoBC,YAA8B,EAAUC,KAAqB,EAAUC,MAAc;IAArF,iBAAY,GAAZF,YAAY;IAA4B,UAAK,GAALC,KAAK;IAA0B,WAAM,GAANC,MAAM;IAXjG,eAAU,GAAgB,EAAE;IAE5B,SAAI,GAAe;MACjBC,IAAI,EAAE;KACP;IAEO,YAAO,GAAG,CAAC;IAEX,qBAAgB,GAAG,GAAG;IACtB,qBAAgB,GAAG,GAAG;EAE8E;EAE5GC,QAAQ;IACN,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEQC,WAAW;IACjB,IAAI,CAACL,KAAK,CAACM,MAAM,CAACC,IAAI,CACpBC,MAAM,CAAEF,MAAM,IAAKG,KAAK,YAAYf,aAAa,CAAC,CAAC,CAACgB,SAAS,CAC3D,MAAK,CAEL,CAAC,CACF;EACL;EAEQN,oBAAoB;IAC1B,IAAI,CAACJ,KAAK,CAACW,WAAW,CAACJ,IAAI,CAACZ,IAAI,CAAC,CAAC,CAAC,CAAC,CAACe,SAAS,CAAEE,MAAW,IAAI;MAC7D,IAAI,CAACC,KAAK,GAAGD,MAAM,CAAC,GAAG,CAAC;MACxBE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,MAAM,CAAC;MAElC,IAAI,CAACI,kBAAkB,EAAE;IAC3B,CAAC,CAAC;EACJ;EAEQA,kBAAkB;IACxB,IAAI,CAACjB,YAAY,CAACkB,gBAAgB,CAAC,IAAI,CAACJ,KAAK,EAAE,IAAI,CAACK,OAAO,CAAC,CACzDX,IAAI,CACHZ,IAAI,CAAC,CAAC,CAAC,CACR,CAACe,SAAS,CAAGS,GAAO,IAAI;MAEvB,IAAGA,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAC;QACtB,MAAM;UAACC,IAAI;UAAEF;QAAO,CAAC,GAAGD,GAAG;QAC3B,IAAI,CAACI,UAAU,GAAG,CAAC,GAAG,IAAI,CAACA,UAAU,EAAE,GAAGH,OAAO,CAAC;QAClD,IAAI,CAACE,IAAI,GAAGA,IAAI;OACjB,MAAM;QACL,IAAI,CAACC,UAAU,GAAG,EAAE;;IAGxB,CAAC,CAAE;EACP;;AAnDW1B,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfnChC,wEASM;MAENA,uEAA8D;MAE9DA,8BAAQ;MAAAA,qBAAK;MAAAA,iBAAS;;;MAbKA,wCAAa;MAWlCA,eAA4B;MAA5BA,iDAA4B","names":["NavigationEnd","take","i0","CharacterListComponent","constructor","characterSvc","route","router","next","ngOnInit","getCharactersByQuery","onUrlChange","events","pipe","filter","event","subscribe","queryParams","params","query","console","log","getDataFromService","searchCharacters","pageNum","res","results","length","info","characters","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp\\src\\app\\components\\pages\\characters\\character-list\\character-list.component.ts","C:\\Users\\destr\\OneDrive\\Escritorio\\programacion\\angular\\RickAndMortyApp\\src\\app\\components\\pages\\characters\\character-list\\character-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, ParamMap, Router } from '@angular/router';\nimport { Character } from '@app/shared/interfaces/character.interface';\nimport { CharacterService } from '@app/shared/services/character.service';\nimport { take } from 'rxjs/operators'\n\ntype RequestInfo = {\n  next: string\n}\n\n@Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.css']\n})\nexport class CharacterListComponent implements OnInit{\n  characters: Character[] = []\n\n  info:RequestInfo = {\n    next: '',\n  }\n\n  private pageNum = 1\n  private query?:string\n  private hideScrollHeight = 200\n  private showScrollHeight = 500\n\n  constructor(private characterSvc: CharacterService, private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit():void {\n    this.getCharactersByQuery()\n  }\n\n  private onUrlChange(): void {\n    this.route.events.pipe(\n      filter((events) => event instanceof NavigationEnd)).subscribe(\n        () => {\n          \n        }\n      )\n  }\n\n  private getCharactersByQuery(): void{\n    this.route.queryParams.pipe(take(1)).subscribe((params: any) => {\n      this.query = params['q']\n      console.log('params --> ', params);\n      \n      this.getDataFromService()\n    })\n  }\n\n  private getDataFromService ():void{\n    this.characterSvc.searchCharacters(this.query, this.pageNum)\n      .pipe(\n        take(1),\n      ).subscribe( (res:any) => {\n\n        if(res?.results?.length){\n          const {info, results} = res\n          this.characters = [...this.characters, ...results]\n          this.info = info\n        } else {\n          this.characters = []\n        }\n\n      } )\n  }\n}\n","<div *ngFor=\"let character of characters\">\n    <a [routerLink]=\"['/character-details', character.id]\">\n        <span>{{ character.name }}</span>\n        <div><img [src]=\"character.image\" [alt]=\"character.name\"></div>\n        <div>{{ character.species }}</div>\n        <div>{{ character.gender }}</div>\n        <div>{{ character.status }}</div>\n        <br>\n    </a>\n</div>\n\n<div *ngIf=\"characters.length <= 0\"><p>No results...</p></div>\n\n<button>Go up</button>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}